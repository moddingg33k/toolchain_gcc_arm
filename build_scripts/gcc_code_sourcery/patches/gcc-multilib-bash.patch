--- gcc/genmultilib.orig	2010-05-01 19:19:02.711476350 -0500
+++ gcc/genmultilib	2010-05-01 19:12:17.842723935 -0500
@@ -1,4 +1,4 @@
-#!/bin/sh 
+#!/bin/bash
 # Generates multilib.h.
 #   Copyright (C) 1994, 1995, 1996, 1997, 1999, 2002, 2007
 #   Free Software Foundation, Inc.
@@ -146,7 +146,7 @@
 
 # Handle aliases
 cat >tmpmultilib3 <<\EOF
-#!/bin/sh
+#!/bin/bash
 # Output a list of aliases (including the original name) for a multilib.
 
 echo $1
@@ -169,7 +169,7 @@
 # by creating a temporary shell script which invokes itself.
 rm -f tmpmultilib
 cat >tmpmultilib <<\EOF
-#!/bin/sh
+#!/bin/bash
 # This recursive script basically outputs all combinations of its
 # input arguments, handling mutually exclusive sets of options by
 # repetition.  When the script is called, ${initial} is the list of
@@ -205,7 +205,7 @@
 # If there exceptions, weed them out now
 if [ -n "${exceptions}" ]; then
   cat >tmpmultilib2 <<\EOF
-#!/bin/sh
+#!/bin/bash
 # This recursive script weeds out any combination of multilib
 # switches that should not be generated.  The output looks like
 # a list of subdirectory names with leading and trailing slashes.
@@ -319,7 +319,7 @@
 # In other words, we must output all combinations of matches.
 rm -f tmpmultilib2
 cat >tmpmultilib2 <<\EOF
-#!/bin/sh
+#!/bin/bash
 # The positional parameters are a list of matches to consider.
 # ${dirout} is the directory name and ${optout} is the current list of
 # options.
